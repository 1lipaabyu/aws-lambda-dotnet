<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0"
    DefaultTargets="full-build"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	
  <ItemGroup>  
    <DeploymentNuGetConfig Include="NuGet.Config"/>  
  </ItemGroup>  	

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio\v14.0</VSToolsPath>

	<SignAssembly Condition=" '$(SignAssembly)' == '' ">true</SignAssembly>
    <AssemblyOriginatorKeyFile Condition=" '$(AssemblyOriginatorKeyFile)' == '' ">$(MSBuildThisFileDirectory)local-development.snk</AssemblyOriginatorKeyFile>

    <UserDirectory Condition="'$(UserDirectory)' == ''">$([System.Environment]::GetFolderPath(SpecialFolder.UserProfile))</UserDirectory>
  </PropertyGroup>

  <Import Project="$(VSToolsPath)\DotNet\Microsoft.DotNet.Props" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(VSToolsPath)\DotNet\Microsoft.DotNet.targets" Condition="'$(VSToolsPath)' != ''" />

  <Target Name="full-build" DependsOnTargets="test-blueprints-dotnetnew;package-blueprints;run-tests;build-nuget-packages">

  </Target>

  <UsingTask TaskName="RemoveNonSymbolsPackages" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <PackagesDir ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
            var symbolsFiles = Directory.GetFiles(PackagesDir, "*.symbols.nupkg");
            foreach (var file in symbolsFiles)
            {
                var newFile = file.Replace(".symbols.nupkg", ".nupkg");
                Log.LogMessage(string.Format("Moving '{0}' to '{1}'.", file, newFile), MessageImportance.Normal);
                File.Delete(newFile);
                File.Move(file, newFile);
            }
		]]>
      </Code>
    </Task>
  </UsingTask>



  <Target Name="init" DependsOnTargets="GetSDKToolingInfoTarget">

    <RemoveDir Directories="../Deployment"/>
    <MakeDir Directories="../Deployment/nuget-packages"/>
	
	<Copy  
            SourceFiles="@(DeploymentNuGetConfig)"  
            DestinationFolder="../Deployment"  
        />
	

    <Exec Command="dotnet restore Libraries.sln"
      WorkingDirectory="..\Libraries"/>
    <Exec Command="dotnet restore BlueprintPackager.sln"
      WorkingDirectory="..\Blueprints\BlueprintPackager"/>
  </Target>

  <Target Name="package-blueprints" DependsOnTargets="init">
    <Exec Command="dotnet run"
      WorkingDirectory="..\Blueprints\BlueprintPackager"/>

    <Exec Command="$(MSBuildThisFileDirectory)nuget.exe pack template.nuspec -OutputDirectory ../../../Deployment/nuget-packages"
      WorkingDirectory="../Blueprints/BlueprintDefinitions/Msbuild-NETCore_2_0"/>
  </Target>

  
  <!-- package-blueprints;build-nuget-packages -->
  <Target Name="test-blueprints-dotnetnew" DependsOnTargets="package-blueprints;build-nuget-packages">
  
    <RemoveDir Directories="../Deployment/BlueprintGenerationTests/DotnetNew"/>
    <MakeDir Directories="../Deployment/BlueprintGenerationTests/DotnetNew"/>	
  
	<Exec Command="dotnet new -i Blueprints\BlueprintDefinitions\Msbuild-NETCore_2_0"
		WorkingDirectory="..\"/>  
		
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.DetectImageLabels;ProjectName=DetectImageLabels"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.EmptyFunction;ProjectName=EmptyFunction"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.DynamoDB;ProjectName=DynamoDBFunction"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.Kinesis;ProjectName=KinesisFunction"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.KinesisFirehose;ProjectName=KinesisFirehoseFunction"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.S3;ProjectName=S3Function"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.AspNetCoreWebAPI;ProjectName=AspNetCoreWebAPI"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.DynamoDBBlogAPI;ProjectName=DynamoDBBlogAPI"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.EmptyServerless;ProjectName=EmptyServerless"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.LexBookTripSample;ProjectName=LexBookTripSample"/>		  
    <MSBuild
          Projects="$(MSBuildProjectFile)"
          Targets="run-blueprint-dotnetnew"
          Properties="TemplateName=lambda.StepFunctionsHelloWorld;ProjectName=StepFunctionsHelloWorld"/>		  
	  		
  </Target>
  
  <Target Name="run-blueprint-dotnetnew" DependsOnTargets="GetSDKToolingInfoTarget">


    <Exec Command="dotnet new $(TemplateName) -n $(ProjectName) --profile default --region us-east-1"
      WorkingDirectory="../Deployment/BlueprintGenerationTests/DotnetNew/"/>
	  
    <Exec Command="dotnet restore"
      WorkingDirectory="../Deployment/BlueprintGenerationTests/DotnetNew/$(ProjectName)/src/$(ProjectName)"/>

    <Exec Command="dotnet restore"
      WorkingDirectory="../Deployment/BlueprintGenerationTests/DotnetNew/$(ProjectName)/Test/$(ProjectName).Tests"/>
	  
    <Exec Command="dotnet build"
      WorkingDirectory="../Deployment/BlueprintGenerationTests/DotnetNew/$(ProjectName)/Test/$(ProjectName).Tests"/>

  </Target>   
    
  <Target Name="run-tests" DependsOnTargets="build-nuget-packages">
    <PropertyGroup>
      <Command>dotnet test -c $(Configuration)</Command>
    </PropertyGroup>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\test\Amazon.Lambda.AspNetCoreServer.Test"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\test\Amazon.Lambda.Core.Tests"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\test\Amazon.Lambda.Logging.AspNetCore.Tests"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\test\Amazon.Lambda.Tools.Test"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\test\EventsTests"/>
  </Target>

  <Target Name="build-nuget-packages" DependsOnTargets="init">

    <Exec Command="dotnet msbuild Libraries.sln /t:Rebuild /p:Configuration=$(Configuration) /p:AssemblyOriginatorKeyFile=$(AssemblyOriginatorKeyFile) /p:SignAssembly=$(SignAssembly)"
        WorkingDirectory="..\Libraries"/>

    <PropertyGroup>
      <Command>dotnet pack --no-build -c $(Configuration) -o ../../../Deployment/nuget-packages</Command>
    </PropertyGroup>

    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.APIGatewayEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.AspNetCoreServer"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.CloudWatchLogsEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.CognitoEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.ConfigEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.Core"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.DynamoDBEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.LexEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.KinesisEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.KinesisFirehoseEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.Logging.AspNetCore"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.S3Events"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.Serialization.Json"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.SimpleEmailEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.SNSEvents"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.TestUtilities"/>
    <Exec Command="$(Command)"
        WorkingDirectory="..\Libraries\src\Amazon.Lambda.Tools"/>

    <RemoveNonSymbolsPackages
        PackagesDir="..\Deployment\nuget-packages"
            />
  </Target>
</Project>